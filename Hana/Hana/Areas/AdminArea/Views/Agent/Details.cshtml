@model Hana.Models.ViewModels.VM_Agent;


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/moment"></script>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row m-b-lg m-t-lg">
        <div class="col-md-3">
            <div class="profile-image">
                <img src="~/admin/img/a4.jpg" class="rounded-circle circle-border m-b-md" alt="profile">
            </div>
            <div class="profile-info">
                <div class="">
                    <div>
                        <h2 class="no-margins">
                            @Model.Name
                        </h2>
                        <h4><span><i class="fa fa-info mr-2"></i></span> @Model.Name</h4>
                        <p>
                            @Model.ActivePosts/@Model.TotalPosts bài đăng đang mở
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <table class="table small">
                <colgroup>
                    <col span="1" style="width: 15%;">
                    <col span="1" style="width: 10%;">
                    <col span="1" style="width: 75%;">
                </colgroup>
                <tbody>
                    <tr>
                        <td style="border:none !important">
                            Active
                        </td>
                        <td style="border:none !important">
                            <strong>@Model.IsActive</strong>
                        </td>
                        @if (Model.IsActive)
                        {
                            <form asp-area="AdminArea" asp-controller="Agent" asp-action="Disable" asp-route-id="@Model.Id" onsubmit="return DisableAgent(this);" class="d-inline">
                                <button class="btn btn-info" title="Khóa" type="submit">
                                   Khóa
                                </button>
                            </form>
                        }
                        @if (!Model.IsActive)
                        {
                            <form asp-area="AdminArea" asp-controller="Agent" asp-action="Enable" asp-route-id="@Model.Id" onsubmit="return EnableAgent(this);" class="d-inline">
                                <button class="btn btn-info" title="Mở" type="submit">
                                    Mở
                                </button>
                            </form>
                        }
                    </tr>
                    
                </tbody>
            </table>
        </div>

    </div>
    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <a class="nav-item nav-link text-info active" id="nav-home-tab" data-toggle="tab" href="#nav-home" role="tab" aria-controls="nav-home" aria-selected="true">Danh sách bài đăng</a>
            <a class="nav-item nav-link text-info" id="nav-profile-tab" data-toggle="tab" href="#nav-profile" role="tab" aria-controls="nav-profile" aria-selected="false">Thống kê</a>
        </div>
    </nav>
    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            <div class="row">
                <div class="col-12">
                    <div class="ibox">
                        @if (Model.Posts.Count > 0)
                        {
                            <div class="ibox-title">
                                <h5>Tất cả bài đăng</h5>
                            </div>
                            <div class="ibox-content">

                                <div class="project-list">

                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th>Trạng thái</th>
                                                <th>Tiêu đề</th>
                                                <th>Giá</th>
                                                <th>Địa chỉ</th>
                                                <th class="text-center">Hành động</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.Posts)
                                            {
                                                <tr>
                                                    @{
                                                        var status = string.Empty;
                                                        var statusClass = string.Empty;
                                                        if (item.IsActive == true)
                                                        {
                                                            status = item.ExprireTime > DateTime.Now ? "Sẵn sàng" : "Hết hạn";
                                                            statusClass = item.ExprireTime > DateTime.Now ? "label-primary" : "label-warning";
                                                        }
                                                        else
                                                        {
                                                            status = "Đã thuê";
                                                            statusClass = "label-default";
                                                        }
                                                    }
                                                    <td class="project-status">
                                                        <span class="label @statusClass">@status</span>
                                                    </td>
                                                    <td class="project-title">
                                                        <a href="project_detail.html">@item.RealEstateDetail.Title</a>
                                                        <br />
                                                        <small>Created @item.PostTime.ToString("dd/MM/yyyy")</small>
                                                    </td>
                                                    <td class="project-completion">
                                                        @string.Format("{0:C}", item.RealEstateDetail.Price)

                                                    </td>
                                                    <td class="project-title">
                                                        @item.Map.Address
                                                    </td>

                                                    <td class="project-actions text-center">
                                                        <a asp-area="AdminArea"
                                                           asp-controller="RealEstate"
                                                           asp-action="Details"
                                                           asp-route-id="@item.Id"
                                                           class="btn btn-info btn-sm">
                                                            <i class="fa fa-folder"></i> View
                                                        </a>
                                                        <a asp-area="AdminArea"
                                                           asp-controller="RealEstate"
                                                           asp-action="Edit"
                                                           asp-route-id="@item.Id"
                                                           class="btn btn-warning btn-sm">
                                                            <i class="fas fa-pencil-alt"></i> Edit
                                                        </a>
                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="ibox-title">

                                <h5>Chưa có bài đăng nào</h5>
                            </div>
                        }

                    </div>
                </div>
            </div>
        </div>

        @* ------------------- *@
        <div class="tab-pane fade mt-2" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab">
            <div>
                <label for="viewTypeDropdown">Chọn kiểu xem:</label>
                <select id="viewTypeDropdown">
                    <option value="month">Theo Tháng</option>
                    <option value="day">Theo Ngày</option>
                </select>
            </div>
            <div>
                <label for="monthYearDropdown">Chọn Tháng/Năm:</label>
                <select id="monthYearDropdown"></select>
            </div>
            <button id="viewAllMonthsBtn" class="btn btn-info">Xem tất cả</button>
            <button id="viewAllDaysBtn" class="btn btn-info">Xem tất cả (Ngày)</button>
            <canvas id="monthlyPostingsChart" width="600" height="200"></canvas>
            <canvas id="dailyPostingsChart" width="600" height="200"></canvas>

        </div>
       
    </div>
</div>
<script>
    const urlParams = new URLSearchParams(window.location.search);
    const currentUrl = window.location.href;
    const pathParts = currentUrl.split('/');
    const agentId = pathParts[pathParts.length - 1];
    let myChart;

    if (agentId) {
        console.log('Agent ID:', agentId);

        fetch(`/AdminArea/Agent/GetRealEstatesByAgentId?agentId=${agentId}`)
            .then(response => response.json())
            .then(data => {
                const monthlyData = {};

                data.forEach(entry => {
                    const postTime = moment(entry.postTime);
                    const monthYearKey = postTime.format("MM/YYYY");

                    if (!monthlyData[monthYearKey]) {
                        monthlyData[monthYearKey] = 0;
                    }
                    monthlyData[monthYearKey]++;
                });

                const monthsYear = Object.keys(monthlyData);
                const postings = Object.values(monthlyData);

            
                const dropdown = $('#monthYearDropdown');
                monthsYear.forEach(monthYear => {
                    dropdown.append(`<option value="${monthYear}">${monthYear}</option>`);
                });

                // Xử lý sự kiện khi giá trị dropdown thay đổi
                dropdown.change(() => {
                    const selectedMonthYear = dropdown.val();
                    const selectedPostings = monthlyData[selectedMonthYear] || 0;

                    // Cập nhật biểu đồ khi người dùng chọn giá trị mới
                    updateChart(selectedMonthYear, selectedPostings);
                });

                // Hiển thị biểu đồ mặc định với giá trị đầu tiên trong dropdown
                const defaultMonthYear = monthsYear[0];
                const defaultPostings = monthlyData[defaultMonthYear] || 0;
                updateChart(defaultMonthYear, defaultPostings);
            });
    } else {
        console.error('Agent ID not found in the URL.');
    }

    function updateChart(monthYear, postCount) {
        const ctx = document.getElementById('monthlyPostingsChart').getContext('2d');
        if (myChart) {
            myChart.destroy();
        }

        myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: [monthYear],
                datasets: [{
                    label: 'Số lượng bài đăng',
                    data: [postCount],
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    document.getElementById('viewAllMonthsBtn').addEventListener('click', function () {
        fetch(`/AdminArea/Agent/GetRealEstatesByAgentId?agentId=${agentId}`)
            .then(response => response.json())
            .then(data => {
                console.log(data)
                const monthsData = {};

                data.forEach(entry => {
                    const postTime = moment(entry.postTime);
                    const monthYearKey = postTime.format("MM/YYYY");

                    if (!monthsData[monthYearKey]) {
                        monthsData[monthYearKey] = 0;
                    }
                    monthsData[monthYearKey]++;
                });


                const months = Object.keys(monthsData);
                const postings = Object.values(monthsData);

                const ctx = document.getElementById('monthlyPostingsChart').getContext('2d');

                // Hủy bỏ biểu đồ hiện tại nếu có
                if (myChart) {
                    myChart.destroy();
                }

                // Tạo biểu đồ với nhiều cột tương ứng với số lượng tháng
                myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: months.map(month => "Tháng " + month),
                        datasets: [{
                            label: 'Số lượng bài đăng',
                            data: postings,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });
    });

</script>

<script>
    const viewTypeDropdown = $('#viewTypeDropdown');
    const dailyBtn = $('#viewAllDaysBtn');
    const monthlyBtn = $('#viewAllMonthsBtn');

    viewTypeDropdown.change(() => {
        const selectedViewType = viewTypeDropdown.val();

        if (selectedViewType === 'month') {
            dailyBtn.hide();
            monthlyBtn.show();
        } else {
            dailyBtn.show();
            monthlyBtn.hide();
        }

        updateChartBasedOnViewType(selectedViewType);
    });

    dailyBtn.click(() => {
        fetch(`/AdminArea/Agent/GetRealEstatesByAgentId?agentId=${agentId}`)
            .then(response => response.json())
            .then(data => {
                const daysData = {};

                data.forEach(entry => {
                    const postTime = moment(entry.postTime);
                    const dayKey = postTime.format("DD/MM/YYYY");

                    if (!daysData[dayKey]) {
                        daysData[dayKey] = 0;
                    }
                    daysData[dayKey]++;
                });

                const days = Object.keys(daysData);
                const postings = Object.values(daysData);

                const ctx = document.getElementById('dailyPostingsChart').getContext('2d');

                if (myChart) {
                    myChart.destroy();
                }

                myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: days.map(day => "Ngày " + day),
                        datasets: [{
                            label: 'Số lượng bài đăng',
                            data: postings,
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            });
    });

</script>
                           