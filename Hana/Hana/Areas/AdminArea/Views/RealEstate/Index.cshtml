@section scripts{
    <script src="~/js/mustache.min.js"></script>
    <script src="~/js/pagination.min.js"></script>
    <script src="~/admin/js/services/realEstateServices.js"></script>
    

}

@{
    int userId = User.Identity.IsAuthenticated ? Convert.ToInt32(User.Claims.FirstOrDefault(c => c.Type == "UserId").Value) : 0;
}
<style>
    .truncate {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 30ch;
    }
</style> 
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="row">
    <div class="col-6 mt-2 pb-3">
        <input type="text" class="form-control" value="" id="search-for-anything" placeholder="Nhập từ tìm kiếm" />
    </div>

    <div class="col-6 mt-2 pb-3">
    <button onclick="realEstateServices.deleteMultipleRealEstate()" class="btn btn-info float-right" title="Xóa Nhiều">
        <i class="fas fa-trash"></i> Xóa Nhiều
    </button>
    </div>

</div>
<div class="table-responsive my-custom-table">
    <table class="table table-striped table-bordered table-hover ">
        <thead class="thead-dark">
        <tr>
            <th> <input type="checkbox" id="check-all" /></th>
            <th class="text-center">#</th>
            <th>Địa chỉ</th>
            <th>Giá/tháng</th>
            <th>Loại phòng</th>
            <th>Người đăng</th>
            <th>Ngày đăng</th>
            <th>Ngày hết hạn</th>
            <th>Tình trạng</th>
                <th></th>
               
        </tr>
    </thead>

    <tbody id="real-estate-list-data">

    </tbody>
</table>
</div>

@Html.AntiForgeryToken()
<div class="pb-1" id="pagination"></div>
<input type="hidden" id="paging-current-index" />

<script id="data-template" type="x-tmpl-mustache">
    <tr>
         <td class="text-center">
            <input type="checkbox" class="checkbox-item" value="{{Id}}" />
        </td>
        <td class="text-center">{{Index}}</td>
        <td class="truncate">{{Street}}</td>
        <td>{{Price}} VNĐ</td>
        <td>{{Type}}</td>
        <td>{{Agent}}</td>
        <td>{{PostDate}}</td>
        <td>{{ExpireTime}}</td>
        <td>{{Status}}</td>
        <td class="text-center">
            <a href="@Url.Action("Details","RealEstate")?id={{Id}}" title="Chi tiết" class="btn btn-blue btn-circle">
                <i class="fas fa-info" al></i>
            </a>
            <form onsubmit="return realEstateServices.disableRealEstate(this);" class="d-inline">
                <input type="hidden" name="id" value="{{Id}}" />
                <button class="btn btn-warning btn-circle" title="Khóa" type="submit">
                    <i class="fas fa-lock"></i>
                </button>
            </form>
            <form onsubmit="return realEstateServices.enableRealEstate(this);" class="d-inline">
                <input type="hidden" name="id" value="{{Id}}" />
                <button class="btn btn-info btn-circle" title="Mở" type="submit">
                    <i class="fas fa-lock-open"></i>
                </button>
            </form>
            <form onsubmit="return realEstateServices.deleteRealEstate(this);" class="d-inline">
                <input type="hidden" name="id" value="{{Id}}" />
                <input type="hidden" name="userId" value="@userId" />
                <button class="btn btn-danger btn-circle" title="Xóa" type="submit">
                    <i class="fas fa-times"></i>
                </button>
            </form>
        </td>
    </tr>
</script>

<canvas id="monthlyPostingsChart" width="600" height="200"></canvas>
<script>
    fetch('/AdminArea/RealEstate/MonthlyPostingsChart')
    .then(response => response.json())
    .then(data => {
        const months = data.map(entry => entry.month);

            const postings = data.map(entry => entry.postCount);

        const ctx = document.getElementById('monthlyPostingsChart').getContext('2d');

        new Chart(ctx, {
            type: 'bar',
            data: {
                labels: months,
                datasets: [{
                    label: 'Số lượng bài đăng',
                    data: postings,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    });
    </script>
